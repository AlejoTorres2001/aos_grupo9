openapi: 3.0.3

info:
  version: 1.0.0
  title: AOS 2023 Grupo3 Trabajos
  description: >
    ## **[AOS 2023]** API REST para la gestión de Trabajos .
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  contact:
    name: Máster Universitario en Ingeniería Web
    url: 'https://miw.etsisi.upm.es/'
    email: miw.etsisi@upm.es

servers:
  - url: http://127.0.0.1:80/api/v1


components:
  schemas:
    Trabajo:
      title: 'Representacion del recurso Trabajo'
      description: 'identifica el ingreso de un vehiculo al taller, estado y descripcion del proceso de reparacion necsario'
      type: object
      properties:
        idTrabajo:
          type: integer
          format: int64
          description: 'identificador unico del trabajo en el sistema de persistencia'
        descripcionTrabajo:
          type: string
          description: 'descripcion del trabajo a realizar'
        fechaIngresoTrabajo:
          type: string
          format: date-time
          description: 'fecha de ingreso del vehiculo al taller'
        fechaIncioTrabajo:
          type: string
          format: date-time
          description: 'fecha de inicio del trabajo'
        fechaFinalizacionTrabajo:
          type: string
          format: date-time
          description: 'fecha de finalizacion del trabajo'
        estadoTrabajo:
          $ref: '#/components/schemas/Estados_Trabajo'
        categoriaTrabajo:
          $ref: '#/components/schemas/Categorias_Trabajo'
        cotizacionTrabajo:
          type: number
          format: double
        clienteIdTrabajo:
          $ref: '#/components/schemas/ClienteId'
        mecanicoIdTrabajo:
          $ref: '#/components/schemas/MecanicoId'
        vehiculoVINTrabajo:
          $ref: '#/components/schemas/VehiculoVIN'
        compejidadTrabajo:
          $ref: '#/components/schemas/Compejidad_Trabajo'
      required:
        - idTrabajo
        - descripcionTrabajo
        - estadoTrabajo
        - categoriaTrabajo
        - clienteIdTrabajo
        - vehiculoVINTrabajo
        - compejidadTrabajo

    Estados_Trabajo:
      description: |
        Estado del trabajo:
        * `Creado`: trabajo ingresado al sistema
        * `Planificado`: trabajo en cola -> mecanico asignado
        * `Iniciado`: trabajo en curso
        * `Terminado`: trabajo finalizado
      type: string
      default: "Creado"
      enum: [ "Creado", "Planificado", "Iniciado", "Terminado" ]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ "Creado", "Planificado", "Iniciado", "Terminado" ])
  Categorias_Trabajo:
      description: |
        cateogorias de un trabajo:
        * `Reparacion`: trabajo de reparacion de partes internas del vehiculo
        * `Recambio`: trabajo de cambio de piezas del vehiculo
        * `Estetica`: trabajos de estetica y pintura
      type: string
      default: "Reparacion"
      enum: [ "Reparacion", "Recambio", "Estetica"]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ "Reparacion", "Recambio", "Estetica"])
  ClienteId:
      description: |
        identificador del cliente dentro del sistema
      type: integer
      format: int64
      default: 1
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.randomize([ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ])
  MecanicoId:
      description: |
        identificador del mecanico dentro del sistema
      type: string
      pattern: "^[A-Z]{1}[0-9]{2}"
      default: "M00"
      example: "M01"
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.regexpStyleStringParse('M[10-99]')
  VehiculoVIN:
      description: |
        identificador del vehiculo dentro del sistema
      type: string
      pattern: "[A-HJ-NPR-Z0-9]{17}"
      default: "D8PAHRVZ78UVX54PM"
      example: "D8PAHRVZ78UVX54PM"
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.regexpStyleStringParse('[A-HJ-NPR-Z0-9]{17}')
  Compejidad_Trabajo:
      description: |
        complejidad del trabajo:
        * `Baja`: trabajo de baja complejidad
        * `Media`: trabajo de media complejidad
        * `Alta`: trabajo de alta complejidad
      type: string
      default: "Baja"
      enum: [ "Baja", "Media", "Alta"]
      # https://v6.fakerjs.dev/guide/
      x-faker: helpers.arrayElement([ "Baja", "Media", "Alta"])